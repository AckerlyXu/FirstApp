<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
        ">
<context:component-scan base-package="start.myapp.service,start.myapp.dao"></context:component-scan>
<!-- 配置数据源 -->  
    <context:property-placeholder location="classpath:db.properties"/>
   <!-- 配置DataSource -->  
 <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" >
        <property name="driverClassName" value="${jdbc.drivername}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

    </bean> 

    <!-- 配置SessionFactory -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <!-- 配置数据源属性 -->  
        <property name="dataSource" ref="dataSource"></property>  
        <!-- 配置扫描的实体包(pojo) -->  
        <!-- 忽略了注释中的@Column中的name,UserNameTable,就会被解析为user_name_table -->
        <property name="namingStrategy">  
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy"></bean>  
        </property>
         <!-- 可以加多个包，需要hibenate映射的类的包 -->
        <property name="packagesToScan" value="start.myapp.model"></property>  
        <!-- 配置Hibernate 的常用属性 -->  
        <property name="hibernateProperties">  
            <props>  
            <!-- 数据库的方言 -->  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>  
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddlAuto}</prop> 
            </props>  
        </property>  
    </bean>  

    <!-- 配置Hibernate 的事物管理器 -->  
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>

    <!-- 事务的传播特性 -->
    <aop:config>  
        <aop:advisor pointcut="execution(* start.myapp.service.*.*(..))" advice-ref="txAdvice" />  
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="find*" read-only="true" propagation="REQUIRED" />
            <tx:method name="get*" read-only="true" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="*"  read-only="true" />
        </tx:attributes>
    </tx:advice>

</beans> 